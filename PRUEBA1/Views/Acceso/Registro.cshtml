@model PRUEBA1.ViewModels.UsuarioVM
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <title>Registro - MiApp</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #4cc9f0;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --success-color: #4bb543;
            --error-color: #ff3860;
            --warning-color: #ffa500;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .register-container {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            max-width: 450px;
            width: 100%;
            margin: 0 auto;
        }

        .register-header {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 25px 20px;
            text-align: center;
        }

            .register-header h3 {
                margin: 0;
                font-weight: 600;
            }

        .register-body {
            padding: 30px;
        }

        .form-control {
            border-radius: 8px;
            padding: 12px 15px;
            border: 1px solid #e1e5eb;
            transition: all 0.3s;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
            }

        .btn-register {
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            border: none;
            color: white;
            padding: 12px;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s;
        }

            .btn-register:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(67, 97, 238, 0.4);
            }

        .alert-message {
            padding: 10px 15px;
            border-radius: 8px;
            margin-top: 15px;
            font-size: 14px;
        }

        .alert-error {
            background-color: rgba(255, 56, 96, 0.1);
            color: var(--error-color);
            border: 1px solid rgba(255, 56, 96, 0.3);
        }

        .alert-success {
            background-color: rgba(75, 181, 67, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(75, 181, 67, 0.3);
        }

        .login-link {
            text-align: center;
            margin-top: 20px;
            color: #6c757d;
        }

            .login-link a {
                color: var(--primary-color);
                text-decoration: none;
                font-weight: 500;
            }

                .login-link a:hover {
                    text-decoration: underline;
                }

        .input-icon {
            position: relative;
        }

            .input-icon i {
                position: absolute;
                left: 15px;
                top: 50%;
                transform: translateY(-50%);
                color: #6c757d;
                z-index: 3;
            }

            .input-icon input {
                padding-left: 40px;
            }

        .brand-logo {
            font-size: 24px;
            font-weight: 700;
            margin-bottom: 5px;
            display: inline-block;
        }

        .brand-subtitle {
            font-size: 14px;
            opacity: 0.9;
        }

        .form-label {
            font-weight: 500;
            margin-bottom: 8px;
            color: #495057;
        }

        .password-strength {
            height: 5px;
            border-radius: 5px;
            margin-top: 5px;
            background-color: #e9ecef;
            overflow: hidden;
        }

        .password-strength-bar {
            height: 100%;
            width: 0%;
            transition: width 0.3s, background-color 0.3s;
        }

        .field-validation-error {
            color: var(--error-color);
            font-size: 12px;
            margin-top: 5px;
            display: block;
        }

        .input-validation-error {
            border-color: var(--error-color) !important;
        }

        .input-valid {
            border-color: var(--success-color) !important;
        }

        .validation-summary-errors {
            background-color: rgba(255, 56, 96, 0.1);
            color: var(--error-color);
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 15px;
            border: 1px solid rgba(255, 56, 96, 0.3);
        }

            .validation-summary-errors ul {
                margin: 0;
                padding-left: 20px;
            }
    </style>
    <!-- Font Awesome para iconos -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="register-container">
                    <div class="register-header">
                        <div class="brand-logo">MiApp</div>
                        <div class="brand-subtitle">Crear nueva cuenta</div>
                    </div>
                    <div class="register-body">
                        <h3 class="text-center mb-4" style="color: var(--dark-color);">Registro</h3>

                        <!-- Mostrar errores de validación del modelo -->
                        @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })

                        <form asp-controller="Acceso" asp-action="Registro" method="post" autocomplete="off" id="registerForm">
                            <div class="mb-3 input-icon">
                                <i class="fas fa-user"></i>
                                <input class="form-control" type="text" asp-for="Nombre" placeholder="Nombre" />
                                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "field-validation-error" })
                            </div>

                            <div class="mb-3 input-icon">
                                <i class="fas fa-users"></i>
                                <input class="form-control" type="text" asp-for="Apellido" placeholder="Apellidos" />
                                @Html.ValidationMessageFor(m => m.Apellido, "", new { @class = "field-validation-error" })
                            </div>

                            <div class="mb-3 input-icon">
                                <i class="fas fa-envelope"></i>
                                <input class="form-control" type="email" asp-for="Correo" placeholder="Correo electrónico" />
                                @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "field-validation-error" })
                            </div>

                            <div class="mb-3 input-icon">
                                <i class="fas fa-lock"></i>
                                <input class="form-control" type="password" asp-for="Contraseña" id="password" placeholder="Contraseña" />
                                <div class="password-strength">
                                    <div class="password-strength-bar" id="passwordStrengthBar"></div>
                                </div>
                                @Html.ValidationMessageFor(m => m.Contraseña, "", new { @class = "field-validation-error" })
                            </div>

                            <div class="mb-3 input-icon">
                                <i class="fas fa-lock"></i>
                                <input class="form-control" type="password" asp-for="ConfirmarContraseña" id="confirmPassword" placeholder="Repita Contraseña" />
                                <small id="passwordMatch" class="form-text" style="display: none; color: var(--error-color); margin-top: 5px;">
                                    <i class="fas fa-exclamation-circle"></i> Las contraseñas no coinciden
                                </small>
                                @Html.ValidationMessageFor(m => m.ConfirmarContraseña, "", new { @class = "field-validation-error" })
                            </div>

                            <button class="btn btn-register w-100" type="submit" id="submitBtn">Registrarse</button>

                            <!-- Mensajes del servidor -->
                            @if (ViewData["Mensaje"] != null)
                            {
                                <div class="alert-message alert-error mt-3">
                                    <i class="fas fa-exclamation-circle"></i>
                                    @ViewData["Mensaje"]
                                </div>
                            }

                            @if (TempData["MensajeExito"] != null)
                            {
                                <div class="alert-message alert-success mt-3">
                                    <i class="fas fa-check-circle"></i>
                                    @TempData["MensajeExito"]
                                </div>
                            }
                        </form>

                        <div class="login-link">
                            <small>¿Ya tienes una cuenta? <a asp-controller="Acceso" asp-action="Login">Iniciar Sesión</a></small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Validación de contraseñas coincidentes y fortaleza
        document.addEventListener('DOMContentLoaded', function() {
            const password = document.getElementById('password');
            const confirmPassword = document.getElementById('confirmPassword');
            const passwordMatch = document.getElementById('passwordMatch');
            const submitBtn = document.getElementById('submitBtn');
            const passwordStrengthBar = document.getElementById('passwordStrengthBar');
            const form = document.getElementById('registerForm');

            function checkPasswordMatch() {
                if (confirmPassword.value !== '') {
                    if (password.value !== confirmPassword.value) {
                        passwordMatch.style.display = 'block';
                        confirmPassword.classList.add('input-validation-error');
                        submitBtn.disabled = true;
                        submitBtn.style.opacity = '0.6';
                    } else {
                        passwordMatch.style.display = 'none';
                        confirmPassword.classList.remove('input-validation-error');
                        confirmPassword.classList.add('input-valid');
                        submitBtn.disabled = false;
                        submitBtn.style.opacity = '1';
                    }
                }
            }

            function checkPasswordStrength() {
                const strength = calculatePasswordStrength(password.value);
                passwordStrengthBar.style.width = strength.percentage + '%';
                passwordStrengthBar.style.backgroundColor = strength.color;

                // Agregar clase de validación visual
                if (password.value.length >= 8) {
                    password.classList.add('input-valid');
                    password.classList.remove('input-validation-error');
                } else {
                    password.classList.remove('input-valid');
                }
            }

            function calculatePasswordStrength(password) {
                let strength = 0;

                if (password.length >= 8) strength += 25;
                if (/[a-z]/.test(password)) strength += 25;
                if (/[A-Z]/.test(password)) strength += 25;
                if (/[0-9]/.test(password)) strength += 25;
                if (/[^a-zA-Z0-9]/.test(password)) strength += 25;

                let color = '#ff3860'; // Rojo (débil)
                if (strength >= 75) {
                    color = '#4bb543'; // Verde (fuerte)
                } else if (strength >= 50) {
                    color = '#ffa500'; // Naranja (medio)
                }

                return { percentage: Math.min(strength, 100), color: color };
            }

            // Limpiar clases de validación al enfocar
            function clearValidationStyles(input) {
                input.addEventListener('focus', function() {
                    this.classList.remove('input-validation-error', 'input-valid');
                });
            }

            // Aplicar a todos los inputs
            const inputs = form.querySelectorAll('input');
            inputs.forEach(input => clearValidationStyles(input));

            // Event listeners
            password.addEventListener('input', checkPasswordStrength);
            confirmPassword.addEventListener('input', checkPasswordMatch);
            password.addEventListener('input', checkPasswordMatch);

            // Validación inicial
            checkPasswordStrength();
            checkPasswordMatch();

            // Mejorar la validación del formulario
            form.addEventListener('submit', function(e) {
                let isValid = true;

                // Validación adicional de contraseñas
                if (password.value !== confirmPassword.value) {
                    isValid = false;
                    passwordMatch.style.display = 'block';
                }

                if (!isValid) {
                    e.preventDefault();
                }
            });
        });

        // Animación suave para los inputs
        $(document).ready(function() {
            $('.form-control').on('focus', function() {
                $(this).parent().css('transform', 'translateY(-2px)');
            }).on('blur', function() {
                $(this).parent().css('transform', 'translateY(0)');
            });
        });
    </script>
</body>
</html>